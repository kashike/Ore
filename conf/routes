# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# RESTful API
GET     /api/projects                                           @controllers.Api.listProjects(version = "v1")
GET     /api/projects/search                                    @controllers.Api.search(version = "v1", pluginId: Option[String])
GET     /api/:version/projects                                  @controllers.Api.listProjects(version)
GET     /api/:version/projects/search                           @controllers.Api.search(version, pluginId: Option[String])

# Home page
GET     /                                                       @controllers.Application.index(categories: Option[String])
GET     /login                                                  @controllers.Application.logIn(sso: Option[String], sig: Option[String])
GET     /logout                                                 @controllers.Application.logOut

# New Project
GET     /new                                                    @controllers.Projects.showCreate
POST    /new/upload                                             @controllers.Projects.upload
GET     /new/:author/:name                                      @controllers.Projects.showCreateWithMeta(author, name)
POST    /:author/:name                                          @controllers.Projects.showFirstVersionCreate(author, name)

# Projects
GET     /:author/:name                                          @controllers.Projects.show(author, name)
GET     /:author/:name/star/:starred                            @controllers.Projects.setStarred(author, name, starred: Boolean)

# Pages
GET     /:author/:name/pages/:page/edit                         @controllers.Projects.showPageEdit(author, name, page)
POST    /:author/:name/pages/:page/edit                         @controllers.Projects.savePage(author, name, page)
GET     /:author/:name/pages/:page/delete                       @controllers.Projects.deletePage(author, name, page)
GET     /:author/:name/pages/:page                              @controllers.Projects.showPage(author, name, page)

# Delete version
GET     /:author/:name/versions/:channel/:version/delete        @controllers.Projects.deleteVersion(author, name, channel, version)

# Downloads
GET     /:author/:name/versions/download/:channel/:version      @controllers.Projects.downloadVersion(author, name, channel, version)
GET     /:author/:name/versions/download/recommended            @controllers.Projects.downloadRecommendedVersion(author, name)

# New Version
GET     /:author/:name/versions/new                             @controllers.Projects.showVersionCreate(author, name)
POST    /:author/:name/versions/new/upload                      @controllers.Projects.uploadVersion(author, name)
GET     /:author/:name/versions/new/:channel/:version           @controllers.Projects.showVersionCreateWithMeta(author, name, channel, version)
POST    /:author/:name/versions/:channel/:version               @controllers.Projects.createVersion(author, name, channel, version)

# Versions
GET     /:author/:name/versions                                 @controllers.Projects.showVersions(author, name, channels: Option[String])
GET     /:author/:name/versions/:channel/:version               @controllers.Projects.showVersion(author, name, channel, version)
POST    /:author/:name/versions/:channel/:version/save          @controllers.Projects.saveVersionDescription(author, name, channel, version)

# Channels
GET     /:author/:name/channels                                 @controllers.Projects.showChannels(author, name)
POST    /:author/:name/channels                                 @controllers.Projects.createChannel(author, name)
POST    /:author/:name/channels/:channel                        @controllers.Projects.editChannel(author, name, channel)
GET     /:author/:name/channels/:channel/delete                 @controllers.Projects.deleteChannel(author, name, channel)

# Discussion
GET     /:author/:name/dicuss                                   @controllers.Projects.showDiscussion(author, name)

# External Links
GET     /:author/:name/source                                   @controllers.Projects.showSource(author, name)
GET     /:author/:name/issues                                   @controllers.Projects.showIssues(author, name)

# Admin
GET     /:author/:name/manage                                   @controllers.Projects.showManager(author, name)
POST    /:author/:name/manage/save                              @controllers.Projects.save(author, name)
POST    /:author/:name/manage/rename                            @controllers.Projects.rename(author, name)
POST    /:author/:name/manage/delete                            @controllers.Projects.delete(author, name)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                           controllers.Assets.at(path="/public", file)
